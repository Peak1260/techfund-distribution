hjust = -0.1, size = 3) +
coord_flip() +
expand_limits(y = max(region_funding$TotalFunding) * 1.2 / 1e9) +
labs(title = "Top 10 Regions by Total Funding",
subtitle = "In Billions of USD",
x = NULL,
y = "Total Funding (Billions USD)") +
theme_minimal() +
theme(plot.title = element_text(face = "bold"))
# Aggregate funding data by vertical
vertical_funding <- techfund |>
filter(!is.na(Vertical), !is.na(`Funding Amount (USD)`)) |>
group_by(Vertical) |>
summarize(
TotalFunding = sum(`Funding Amount (USD)`, na.rm = TRUE),
AvgFunding = mean(`Funding Amount (USD)`, na.rm = TRUE),
MedianFunding = median(`Funding Amount (USD)`, na.rm = TRUE),
NumCompanies = n_distinct(Company),
NumDeals = n()
) |>
arrange(desc(TotalFunding))
# Top verticals plot
verticals_plot <- vertical_funding |>
head(10) |>
ggplot(aes(x = reorder(Vertical, TotalFunding), y = TotalFunding / 1e9)) +
geom_bar(stat = "identity", fill = viridis(10, alpha = 0.8, begin = 0.4)) +
geom_text(aes(label = sprintf("$%.1fB", TotalFunding / 1e9)),
hjust = -0.1, size = 3) +
coord_flip() +
expand_limits(y = max(vertical_funding$TotalFunding) * 1.2 / 1e9) +
labs(title = "Top 10 Verticals by Total Funding",
subtitle = "In Billions of USD",
x = NULL,
y = "Total Funding (Billions USD)") +
theme_minimal() +
theme(plot.title = element_text(face = "bold"))
print(regions_plot+verticals_plot)
# Heatmap of Region and Vertical
region_vertical_funding <- techfund |>
filter(!is.na(Region), !is.na(Vertical), !is.na(`Funding Amount (USD)`)) |>
group_by(RegionClean, Vertical) |>
summarize(
TotalFunding = sum(`Funding Amount (USD)`, na.rm = TRUE),
NumDeals = n()
) |>
ungroup()
# Get top 10 regions and top 10 verticals for the heatmap
top_regions <- region_funding$RegionClean |> head(10)
top_verticals <- vertical_funding$Vertical |> head(10)
# Filter data for heatmap
heatmap_data <- region_vertical_funding |>
filter(RegionClean %in% top_regions, Vertical %in% top_verticals)
# Create heatmap for region vs. vertical
heatmap_plot <- heatmap_data |>
ggplot(aes(x = Vertical, y = RegionClean, fill = log1p(TotalFunding))) +
geom_tile() +
scale_fill_viridis_c(name = "Log Funding", option = "plasma") +
labs(title = "Heatmap of Funding: Region vs. Vertical",
x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold"))
print(heatmap_plot)
# Aggregate data for PCA: Using mean, variance, and count of funding
pca_data <- techfund |>
filter(Region %in% top_regions) |>
group_by(Region) |>
summarize(
mean_funding = mean(`Funding Amount (USD)`, na.rm = TRUE),
sd_funding = sd(`Funding Amount (USD)`, na.rm = TRUE),
total_funding = sum(`Funding Amount (USD)`, na.rm = TRUE),
num_investments = n(),
num_verticals = n_distinct(Vertical)
) |>
filter(!is.na(mean_funding), !is.na(sd_funding)) |>
column_to_rownames("Region") |>
as.matrix()
# Perform PCA on the data
pca_result <- prcomp(pca_data, scale. = TRUE)
# Convert PCA results to dataframe
pca_df <- as.data.frame(pca_result$x[, 1:2])
pca_df$Region <- rownames(pca_df)
# Plot PCA results
pca_plot <- ggplot(pca_df, aes(x = PC1, y = PC2, label = Region)) +
geom_point(size = 3, color = "blue") +
geom_text_repel(max.overlaps = 10) +
labs(title = "PCA of Tech Funding by Region",
x = "Principal Component 1",
y = "Principal Component 2") +
theme_minimal()
print(pca_plot)
# Convert "MMM-YY" format to proper date (changing it to be by quarter)
techfund <- techfund |>
mutate(
parsed_date = as.Date(paste0("01-", `Funding Date`), format = "%d-%b-%y"),
funding_year = year(parsed_date),
funding_quarter = quarter(parsed_date),
time_since_2020 = funding_year - 2020 + (funding_quarter - 1) / 4
) |>
filter(!is.na(parsed_date))  # Remove invalid dates
# Filter techfund to only include top regions and verticals
techfund_top <- techfund |>
filter(RegionClean %in% top_regions, Vertical %in% top_verticals)
# Find the Vertical with the Most Funding Over Time
vertical_trends <- techfund_top |>
group_by(time_since_2020, Vertical) |>
summarise(total_funding = sum(`Funding Amount (USD)`, na.rm = TRUE) / 1e9,
.groups = 'drop')
vertical_time <- ggplot(vertical_trends, aes(x = time_since_2020,
y = total_funding,
color = Vertical)) +
geom_line(linewidth = 0.5) +
geom_point() +
scale_x_continuous(labels = scales::label_number(accuracy = 0.01)) +
scale_y_continuous(labels = label_number(suffix = "B", accuracy = 0.01)) +
labs(title = "Total Funding Over Time by Vertical",
x = "Time Since 2020 (Years)",
y = "Total Funding (USD, Billions)",
color = "Vertical") +
theme_minimal()
# Find the Country/Region with the Most Growth in Funding
region_trends <- techfund_top |>
group_by(time_since_2020, RegionClean) |>
summarise(total_funding = sum(`Funding Amount (USD)`, na.rm = TRUE) / 1e9,
.groups = 'drop')
region_time <- ggplot(region_trends, aes(x = time_since_2020,
y = total_funding,
color = RegionClean)) +
geom_line(linewidth = 0.5) +
geom_point() +
scale_x_continuous(labels = scales::label_number(accuracy = 0.01)) +
scale_y_continuous(labels = label_number(suffix = "B", accuracy = 0.01)) +
labs(title = "Total Funding Over Time by Region",
x = "Time Since 2020 (Years)",
y = "Total Funding (USD, Billions)",
color = "Region") +
theme_minimal()
print(vertical_time + region_time)
library(tidyverse)
library(colorspace)
library(ggplot2)
library(patchwork)
library(ggrepel)
library(lubridate)
library(broom)
library(scales)
library(viridis)
library(gridExtra)
library(corrplot)
library(knitr)
library(kableExtra)
techfund_raw <- read_csv('tech_fundings.csv')
techfund <- techfund_raw |>
# Convert funding to numeric, properly handling commas
mutate(`Funding Amount (USD)` = ifelse(is.na(`Funding Amount (USD)`),
0, `Funding Amount (USD)`)) |>
mutate(`Funding Amount (USD)` = suppressWarnings(as.numeric(gsub(
",", "", `Funding Amount (USD)`))))|>
# Handle missing values in Region
mutate(Region = ifelse(is.na(Region), "Unknown", Region))
# Group smaller regions
techfund <- techfund |>
mutate(RegionClean = fct_lump_n(Region, 20, other_level = "Other Regions"))
# Table of first 5 entries to get an idea of what the dataset looks like
techfund |>
head(5) |>
select(-1, -3, -ncol(techfund)) |>
kable(caption = "First 5 Entries of Tech Fundings",
align = rep("c", ncol(select(techfund, -1, -3, -ncol(techfund)))))
# Aggregate funding data by region
region_funding <- techfund |>
filter(!is.na(Region), !is.na(`Funding Amount (USD)`)) |>
group_by(RegionClean) |>
summarize(
TotalFunding = sum(`Funding Amount (USD)`, na.rm = TRUE),
AvgFunding = mean(`Funding Amount (USD)`, na.rm = TRUE),
MedianFunding = median(`Funding Amount (USD)`, na.rm = TRUE),
NumCompanies = n_distinct(Company),
NumDeals = n()
) |>
arrange(desc(TotalFunding))
# Top regions plot
regions_plot <- region_funding |>
head(10) |>
ggplot(aes(x = reorder(RegionClean, TotalFunding), y = TotalFunding / 1e9))+
geom_bar(stat = "identity", fill = viridis(10, alpha = 0.8)) +
geom_text(aes(label = sprintf("$%.1fB", TotalFunding / 1e9)),
hjust = -0.1, size = 3) +
coord_flip() +
expand_limits(y = max(region_funding$TotalFunding) * 1.2 / 1e9) +
labs(title = "Top 10 Regions by Total Funding",
subtitle = "In Billions of USD",
x = NULL,
y = "Total Funding (Billions USD)") +
theme_minimal() +
theme(plot.title = element_text(face = "bold"))
# Aggregate funding data by vertical
vertical_funding <- techfund |>
filter(!is.na(Vertical), !is.na(`Funding Amount (USD)`)) |>
group_by(Vertical) |>
summarize(
TotalFunding = sum(`Funding Amount (USD)`, na.rm = TRUE),
AvgFunding = mean(`Funding Amount (USD)`, na.rm = TRUE),
MedianFunding = median(`Funding Amount (USD)`, na.rm = TRUE),
NumCompanies = n_distinct(Company),
NumDeals = n()
) |>
arrange(desc(TotalFunding))
# Top verticals plot
verticals_plot <- vertical_funding |>
head(10) |>
ggplot(aes(x = reorder(Vertical, TotalFunding), y = TotalFunding / 1e9)) +
geom_bar(stat = "identity", fill = viridis(10, alpha = 0.8, begin = 0.4)) +
geom_text(aes(label = sprintf("$%.1fB", TotalFunding / 1e9)),
hjust = -0.1, size = 3) +
coord_flip() +
expand_limits(y = max(vertical_funding$TotalFunding) * 1.2 / 1e9) +
labs(title = "Top 10 Verticals by Total Funding",
subtitle = "In Billions of USD",
x = NULL,
y = "Total Funding (Billions USD)") +
theme_minimal() +
theme(plot.title = element_text(face = "bold"))
print(regions_plot+verticals_plot)
# Heatmap of Region and Vertical
region_vertical_funding <- techfund |>
filter(!is.na(Region), !is.na(Vertical), !is.na(`Funding Amount (USD)`)) |>
group_by(RegionClean, Vertical) |>
summarize(
TotalFunding = sum(`Funding Amount (USD)`, na.rm = TRUE),
NumDeals = n()
) |>
ungroup()
# Get top 10 regions and top 10 verticals for the heatmap
top_regions <- region_funding$RegionClean |> head(10)
top_verticals <- vertical_funding$Vertical |> head(10)
# Filter data for heatmap
heatmap_data <- region_vertical_funding |>
filter(RegionClean %in% top_regions, Vertical %in% top_verticals)
# Create heatmap for region vs. vertical
heatmap_plot <- heatmap_data |>
ggplot(aes(x = Vertical, y = RegionClean, fill = log1p(TotalFunding))) +
geom_tile() +
scale_fill_viridis_c(name = "Log Funding", option = "plasma") +
labs(title = "Heatmap of Funding: Region vs. Vertical",
x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold"))
print(heatmap_plot)
# Aggregate data for PCA: Using mean, variance, and count of funding
pca_data <- techfund |>
filter(Region %in% top_regions) |>
group_by(Region) |>
summarize(
mean_funding = mean(`Funding Amount (USD)`, na.rm = TRUE),
sd_funding = sd(`Funding Amount (USD)`, na.rm = TRUE),
total_funding = sum(`Funding Amount (USD)`, na.rm = TRUE),
num_investments = n(),
num_verticals = n_distinct(Vertical)
) |>
filter(!is.na(mean_funding), !is.na(sd_funding)) |>
column_to_rownames("Region") |>
as.matrix()
# Perform PCA on the data
pca_result <- prcomp(pca_data, scale. = TRUE)
# Convert PCA results to dataframe
pca_df <- as.data.frame(pca_result$x[, 1:2])
pca_df$Region <- rownames(pca_df)
# Plot PCA results
pca_plot <- ggplot(pca_df, aes(x = PC1, y = PC2, label = Region)) +
geom_point(size = 3, color = "blue") +
geom_text_repel(max.overlaps = 10) +
labs(title = "PCA of Tech Funding by Region",
x = "Principal Component 1",
y = "Principal Component 2") +
theme_minimal()
print(pca_plot)
# Convert "MMM-YY" format to proper date (changing it to be by quarter)
techfund <- techfund |>
mutate(
parsed_date = as.Date(paste0("01-", `Funding Date`), format = "%d-%b-%y"),
funding_year = year(parsed_date),
funding_quarter = quarter(parsed_date),
time_since_2020 = funding_year - 2020 + (funding_quarter - 1) / 4
) |>
filter(!is.na(parsed_date))  # Remove invalid dates
# Filter techfund to only include top regions and verticals
techfund_top <- techfund |>
filter(RegionClean %in% top_regions, Vertical %in% top_verticals)
# Find the Vertical with the Most Funding Over Time
vertical_trends <- techfund_top |>
group_by(time_since_2020, Vertical) |>
summarise(total_funding = sum(`Funding Amount (USD)`, na.rm = TRUE) / 1e9,
.groups = 'drop')
vertical_time <- ggplot(vertical_trends, aes(x = time_since_2020,
y = total_funding,
color = Vertical)) +
geom_line(linewidth = 0.5) +
geom_point() +
scale_x_continuous(labels = scales::label_number(accuracy = 0.01)) +
scale_y_continuous(labels = label_number(suffix = "B", accuracy = 0.01)) +
labs(title = "Total Funding Over Time by Vertical",
x = "Time Since 2020 (Years)",
y = "Total Funding (USD, Billions)",
color = "Vertical") +
theme_minimal()
# Find the Country/Region with the Most Growth in Funding
region_trends <- techfund_top |>
group_by(time_since_2020, RegionClean) |>
summarise(total_funding = sum(`Funding Amount (USD)`, na.rm = TRUE) / 1e9,
.groups = 'drop')
region_time <- ggplot(region_trends, aes(x = time_since_2020,
y = total_funding,
color = RegionClean)) +
geom_line(linewidth = 0.5) +
geom_point() +
scale_x_continuous(labels = scales::label_number(accuracy = 0.01)) +
scale_y_continuous(labels = label_number(suffix = "B", accuracy = 0.01)) +
labs(title = "Total Funding Over Time by Region",
x = "Time Since 2020 (Years)",
y = "Total Funding (USD, Billions)",
color = "Region") +
theme_minimal()
print(vertical_time + region_time)
library(tidyverse)
library(colorspace)
library(ggplot2)
library(patchwork)
library(ggrepel)
library(lubridate)
library(broom)
library(scales)
library(viridis)
library(gridExtra)
library(corrplot)
library(knitr)
library(kableExtra)
techfund_raw <- read_csv('tech_fundings.csv')
techfund <- techfund_raw |>
# Convert funding to numeric, properly handling commas
mutate(`Funding Amount (USD)` = ifelse(is.na(`Funding Amount (USD)`),
0, `Funding Amount (USD)`)) |>
mutate(`Funding Amount (USD)` = suppressWarnings(as.numeric(gsub(
",", "", `Funding Amount (USD)`))))|>
# Handle missing values in Region
mutate(Region = ifelse(is.na(Region), "Unknown", Region))
# Group smaller regions
techfund <- techfund |>
mutate(RegionClean = fct_lump_n(Region, 20, other_level = "Other Regions"))
# Table of first 5 entries to get an idea of what the dataset looks like
techfund |>
head(5) |>
select(-1, -3, -ncol(techfund)) |>
kable(caption = "First 5 Entries of Tech Fundings",
align = rep("c", ncol(select(techfund, -1, -3, -ncol(techfund)))))
# Aggregate funding data by region
region_funding <- techfund |>
filter(!is.na(Region), !is.na(`Funding Amount (USD)`)) |>
group_by(RegionClean) |>
summarize(
TotalFunding = sum(`Funding Amount (USD)`, na.rm = TRUE),
AvgFunding = mean(`Funding Amount (USD)`, na.rm = TRUE),
MedianFunding = median(`Funding Amount (USD)`, na.rm = TRUE),
NumCompanies = n_distinct(Company),
NumDeals = n()
) |>
arrange(desc(TotalFunding))
# Top regions plot
regions_plot <- region_funding |>
head(10) |>
ggplot(aes(x = reorder(RegionClean, TotalFunding), y = TotalFunding / 1e9))+
geom_bar(stat = "identity", fill = viridis(10, alpha = 0.8)) +
geom_text(aes(label = sprintf("$%.1fB", TotalFunding / 1e9)),
hjust = -0.1, size = 3) +
coord_flip() +
expand_limits(y = max(region_funding$TotalFunding) * 1.2 / 1e9) +
labs(title = "Top 10 Regions by Total Funding",
subtitle = "In Billions of USD",
x = NULL,
y = "Total Funding (Billions USD)") +
theme_minimal() +
theme(plot.title = element_text(face = "bold"))
# Aggregate funding data by vertical
vertical_funding <- techfund |>
filter(!is.na(Vertical), !is.na(`Funding Amount (USD)`)) |>
group_by(Vertical) |>
summarize(
TotalFunding = sum(`Funding Amount (USD)`, na.rm = TRUE),
AvgFunding = mean(`Funding Amount (USD)`, na.rm = TRUE),
MedianFunding = median(`Funding Amount (USD)`, na.rm = TRUE),
NumCompanies = n_distinct(Company),
NumDeals = n()
) |>
arrange(desc(TotalFunding))
# Top verticals plot
verticals_plot <- vertical_funding |>
head(10) |>
ggplot(aes(x = reorder(Vertical, TotalFunding), y = TotalFunding / 1e9)) +
geom_bar(stat = "identity", fill = viridis(10, alpha = 0.8, begin = 0.4)) +
geom_text(aes(label = sprintf("$%.1fB", TotalFunding / 1e9)),
hjust = -0.1, size = 3) +
coord_flip() +
expand_limits(y = max(vertical_funding$TotalFunding) * 1.2 / 1e9) +
labs(title = "Top 10 Verticals by Total Funding",
subtitle = "In Billions of USD",
x = NULL,
y = "Total Funding (Billions USD)") +
theme_minimal() +
theme(plot.title = element_text(face = "bold"))
print(regions_plot+verticals_plot)
# Heatmap of Region and Vertical
region_vertical_funding <- techfund |>
filter(!is.na(Region), !is.na(Vertical), !is.na(`Funding Amount (USD)`)) |>
group_by(RegionClean, Vertical) |>
summarize(
TotalFunding = sum(`Funding Amount (USD)`, na.rm = TRUE),
NumDeals = n()
) |>
ungroup()
# Get top 10 regions and top 10 verticals for the heatmap
top_regions <- region_funding$RegionClean |> head(10)
top_verticals <- vertical_funding$Vertical |> head(10)
# Filter data for heatmap
heatmap_data <- region_vertical_funding |>
filter(RegionClean %in% top_regions, Vertical %in% top_verticals)
# Create heatmap for region vs. vertical
heatmap_plot <- heatmap_data |>
ggplot(aes(x = Vertical, y = RegionClean, fill = log1p(TotalFunding))) +
geom_tile() +
scale_fill_viridis_c(name = "Log Funding", option = "plasma") +
labs(title = "Heatmap of Funding: Region vs. Vertical",
x = NULL, y = NULL) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold"))
print(heatmap_plot)
# Aggregate data for PCA: Using mean, variance, and count of funding
pca_data <- techfund |>
filter(Region %in% top_regions) |>
group_by(Region) |>
summarize(
mean_funding = mean(`Funding Amount (USD)`, na.rm = TRUE),
sd_funding = sd(`Funding Amount (USD)`, na.rm = TRUE),
total_funding = sum(`Funding Amount (USD)`, na.rm = TRUE),
num_investments = n(),
num_verticals = n_distinct(Vertical)
) |>
filter(!is.na(mean_funding), !is.na(sd_funding)) |>
column_to_rownames("Region") |>
as.matrix()
# Perform PCA on the data
pca_result <- prcomp(pca_data, scale. = TRUE)
# Convert PCA results to dataframe
pca_df <- as.data.frame(pca_result$x[, 1:2])
pca_df$Region <- rownames(pca_df)
# Plot PCA results
pca_plot <- ggplot(pca_df, aes(x = PC1, y = PC2, label = Region)) +
geom_point(size = 3, color = "blue") +
geom_text_repel(max.overlaps = 10) +
labs(title = "PCA of Tech Funding by Region",
x = "Principal Component 1",
y = "Principal Component 2") +
theme_minimal()
print(pca_plot)
# Convert "MMM-YY" format to proper date (changing it to be by quarter)
techfund <- techfund |>
mutate(
parsed_date = as.Date(paste0("01-", `Funding Date`), format = "%d-%b-%y"),
funding_year = year(parsed_date),
funding_quarter = quarter(parsed_date),
time_since_2020 = funding_year - 2020 + (funding_quarter - 1) / 4
) |>
filter(!is.na(parsed_date))  # Remove invalid dates
# Filter techfund to only include top regions and verticals
techfund_top <- techfund |>
filter(RegionClean %in% top_regions, Vertical %in% top_verticals)
# Find the Vertical with the Most Funding Over Time
vertical_trends <- techfund_top |>
group_by(time_since_2020, Vertical) |>
summarise(total_funding = sum(`Funding Amount (USD)`, na.rm = TRUE) / 1e9,
.groups = 'drop')
vertical_time <- ggplot(vertical_trends, aes(x = time_since_2020,
y = total_funding,
color = Vertical)) +
geom_line(linewidth = 0.5) +
geom_point() +
scale_x_continuous(labels = scales::label_number(accuracy = 0.01)) +
scale_y_continuous(labels = label_number(suffix = "B", accuracy = 0.01)) +
labs(title = "Total Funding Over Time by Vertical",
x = "Time Since 2020 (Years)",
y = "Total Funding (USD, Billions)",
color = "Vertical") +
theme_minimal()
# Find the Country/Region with the Most Growth in Funding
region_trends <- techfund_top |>
group_by(time_since_2020, RegionClean) |>
summarise(total_funding = sum(`Funding Amount (USD)`, na.rm = TRUE) / 1e9,
.groups = 'drop')
region_time <- ggplot(region_trends, aes(x = time_since_2020,
y = total_funding,
color = RegionClean)) +
geom_line(linewidth = 0.5) +
geom_point() +
scale_x_continuous(labels = scales::label_number(accuracy = 0.01)) +
scale_y_continuous(labels = label_number(suffix = "B", accuracy = 0.01)) +
labs(title = "Total Funding Over Time by Region",
x = "Time Since 2020 (Years)",
y = "Total Funding (USD, Billions)",
color = "Region") +
theme_minimal()
print(vertical_time + region_time)
